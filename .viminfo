# This viminfo file was generated by Vim 9.0.
# You may edit it if you're careful!

# Viminfo version
|1,4

# Value of 'encoding' when this file was written
*encoding=utf-8


# hlsearch on (H) or off (h):
~H
# Command Line History (newest to oldest):
:wq!
|2,0,1710053038,,"wq!"
:%d
|2,0,1710049583,,"%d"
:q!
|2,0,1710047946,,"q!"
:q
|2,0,1710047933,,"q"

# Search String History (newest to oldest):

# Expression History (newest to oldest):

# Input Line History (newest to oldest):

# Debug Line History (newest to oldest):

# Registers:
""1	LINE	0
	# Configure AWS Provider
	provider "aws" {
	  region = var.aws_region  # Replace with your desired region
	}
	
	# VPC and Subnet (Optional)
	# -- Use existing VPC and subnet resources if available
	resource "aws_vpc" "my_vpc" {
	  cidr_block = var.vpc_cidr_block
	}
	
	resource "aws_subnet" "public" {
	  vpc_id            = aws_vpc.my_vpc.id
	  cidr_block        = var.public_subnet1_cidr_block
	  availability_zone = var.availability_zone  # Update if needed
	}
	
	# Internet Gateway
	resource "aws_internet_gateway" "gw" {
	  vpc_id = aws_vpc.my_vpc.id
	}
	
	# Attach Internet Gateway to VPC
	resource "aws_vpc_attachment" "gw_attach" {
	  vpc_id             = aws_vpc.my_vpc.id
	  internet_gateway_id = aws_internet_gateway.gw.id
	}
	
	# Route Table
	resource "aws_route_table" "public_route_table" {
	  vpc_id = aws_vpc.my_vpc.id
	
	  route {
	    cidr_block = "0.0.0.0/0"
	    gateway_id = aws_internet_gateway.gw.id
	  }
	}
	
	# Associate Subnet with Route Table
	resource "aws_route_table_association" "public_subnet_association" {
	  subnet_id      = aws_subnet.public.id
	  route_table_id = aws_route_table.public_route_table.id
	}
	
	# Security Group
	resource "aws_security_group" "web_server" {
	  vpc_id      = aws_vpc.my_vpc.id  # Associate the security group with the same VPC
	  name        = "web-server-sg"
	  description = "Security group for web server instance"
	
|3,1,1,1,50,0,1710049583,"# Configure AWS Provider","provider \"aws\" {","  region = var.aws_region  # Replace with your desired region","}","","# VPC and Subnet (Optional)","# -- Use existing VPC and subnet resources if available","resource \"aws_vpc\" \"my_vpc\" {","  cidr_block = var.vpc_cidr_block","}","","resource \"aws_subnet\" \"public\" {","  vpc_id            = aws_vpc.my_vpc.id","  cidr_block        = var.public_subnet1_cidr_block",>65
|<"  availability_zone = var.availability_zone  # Update if needed","}","","# Internet Gateway","resource \"aws_internet_gateway\" \"gw\" {","  vpc_id = aws_vpc.my_vpc.id","}","","# Attach Internet Gateway to VPC","resource \"aws_vpc_attachment\" \"gw_attach\" {","  vpc_id             = aws_vpc.my_vpc.id","  internet_gateway_id = aws_internet_gateway.gw.id","}","","# Route Table","resource \"aws_route_table\" \"public_route_table\" {","  vpc_id = aws_vpc.my_vpc.id","","  route {",>32
|<"    cidr_block = \"0.0.0.0/0\"","    gateway_id = aws_internet_gateway.gw.id","  }","}","","# Associate Subnet with Route Table","resource \"aws_route_table_association\" \"public_subnet_association\" {","  subnet_id      = aws_subnet.public.id","  route_table_id = aws_route_table.public_route_table.id","}","","# Security Group","resource \"aws_security_group\" \"web_server\" {","  vpc_id      = aws_vpc.my_vpc.id  # Associate the security group with the same VPC",>35
|<"  name        = \"web-server-sg\"","  description = \"Security group for web server instance\"",""
"2	LINE	0
	# Define variables
	variable "aws_region" {
	  type        = string
	  description = "The AWS region to deploy the resources in."
	  default     = "ap-southeast-1"  # Match the region in your main.tf configuration
	}
	
	variable "vpc_cidr_block" {
	  type        = string
	  description = "The CIDR block for the VPC."
	  default     = "10.0.0.0/16"
	}
	
	variable "public_subnet1_cidr_block" {
	  type        = string
	  description = "The CIDR block for the public subnet."
	  default     = "10.0.1.0/24"
	}
	
	variable "availability_zone" {
	  type        = string
	  description = "The availability zone to use for the subnet."
	  default     = "ap-southeast-1a"  # Update this to a valid AZ for your chosen region
	}
	
|3,0,2,1,25,0,1710049507,"# Define variables","variable \"aws_region\" {","  type        = string","  description = \"The AWS region to deploy the resources in.\"","  default     = \"ap-southeast-1\"  # Match the region in your main.tf configuration","}","","variable \"vpc_cidr_block\" {","  type        = string","  description = \"The CIDR block for the VPC.\"","  default     = \"10.0.0.0/16\"","}","","variable \"public_subnet1_cidr_block\" {",>24
|<"  type        = string","  description = \"The CIDR block for the public subnet.\"","  default     = \"10.0.1.0/24\"","}","","variable \"availability_zone\" {","  type        = string","  description = \"The availability zone to use for the subnet.\"","  default     = \"ap-southeast-1a\"  # Update this to a valid AZ for your chosen region","}",""
"3	LINE	0
	# Configure AWS Provider
	provider "aws" {
	  region = var.aws_region  # Replace with your desired region
	}
	
	# VPC and Subnet (Optional)
	# -- Use existing VPC and subnet resources if available
	resource "aws_vpc" "my_vpc" {
	  cidr_block = var.vpc_cidr_block
	}
	
	resource "aws_subnet" "public" {
	  vpc_id            = aws_vpc.my_vpc.id
	  cidr_block        = var.public_subnet1_cidr_block
	  availability_zone = var.availability_zone  # Update if needed
	}
	
	# Internet Gateway
	resource "aws_internet_gateway" "gw" {
	  vpc_id = aws_vpc.my_vpc.id
	}
	
	# Attach Internet Gateway to VPC
	resource "aws_vpc_attachment" "gw_attach" {
	  vpc_id       = aws_vpc.my_vpc.id
	  internet_gateway_id = aws_internet_gateway.gw.id
	}
	
	# Route Table
	resource "aws_route_table" "public_route_table" {
	  vpc_id = aws_vpc.my_vpc.id
	
	  route {
	    cidr_block = "0.0.0.0/0"
	    gateway_id = aws_internet_gateway.gw.id
	  }
	}
	
	# Associate Subnet with Route Table
	resource "aws_route_table_association" "public_subnet_association" {
	  subnet_id      = aws_subnet.public.id
	  route_table_id = aws_route_table.public_route_table.id
	}
	
	# Security Group
	resource "aws_security_group" "web_server" {
	  vpc_id      = aws_vpc.my_vpc.id  # Associate the security group with the same VPC
	  name        = "web-server-sg"
	  description = "Security group for web server instance"
	
|3,0,3,1,50,0,1710049478,"# Configure AWS Provider","provider \"aws\" {","  region = var.aws_region  # Replace with your desired region","}","","# VPC and Subnet (Optional)","# -- Use existing VPC and subnet resources if available","resource \"aws_vpc\" \"my_vpc\" {","  cidr_block = var.vpc_cidr_block","}","","resource \"aws_subnet\" \"public\" {","  vpc_id            = aws_vpc.my_vpc.id","  cidr_block        = var.public_subnet1_cidr_block",>65
|<"  availability_zone = var.availability_zone  # Update if needed","}","","# Internet Gateway","resource \"aws_internet_gateway\" \"gw\" {","  vpc_id = aws_vpc.my_vpc.id","}","","# Attach Internet Gateway to VPC","resource \"aws_vpc_attachment\" \"gw_attach\" {","  vpc_id       = aws_vpc.my_vpc.id","  internet_gateway_id = aws_internet_gateway.gw.id","}","","# Route Table","resource \"aws_route_table\" \"public_route_table\" {","  vpc_id = aws_vpc.my_vpc.id","","  route {",>32
|<"    cidr_block = \"0.0.0.0/0\"","    gateway_id = aws_internet_gateway.gw.id","  }","}","","# Associate Subnet with Route Table","resource \"aws_route_table_association\" \"public_subnet_association\" {","  subnet_id      = aws_subnet.public.id","  route_table_id = aws_route_table.public_route_table.id","}","","# Security Group","resource \"aws_security_group\" \"web_server\" {","  vpc_id      = aws_vpc.my_vpc.id  # Associate the security group with the same VPC",>35
|<"  name        = \"web-server-sg\"","  description = \"Security group for web server instance\"",""
"4	LINE	0
	variable "aws_region" {
	  type        = string
	  description = "The AWS region to deploy the resources in."
	  default     = "ap-southeast-1"  # Match the region in your main.tf configuration
	}
	
	variable "vpc_cidr_block" {
	  type        = string
	  description = "The CIDR block for the VPC."
	  default     = "10.0.0.0/16"
	}
	
	variable "public_subnet1_cidr_block" {
	  type        = string
	  description = "The CIDR block for the public subnet."
	  default     = "10.0.1.0/24"
	}
	
	variable "availability_zone" {
	  type        = string
	  description = "The availability zone to use for the subnet."
	  default     = "ap-southeast-1a"  # Update this to a valid AZ for your chosen region
	}
	
	variable "instance_type" {
	  type        = string
	  description = "The instance type for the EC2 instance."
	  default     = "t2.micro"
	}
	
	variable "ami_id" {
	  type        = string
	  description = "The AMI ID to use for the EC2 instance."
	  default     = "ami-0eb4694aa6f249c52"
	}
	
|3,0,4,1,36,0,1710049373,"variable \"aws_region\" {","  type        = string","  description = \"The AWS region to deploy the resources in.\"","  default     = \"ap-southeast-1\"  # Match the region in your main.tf configuration","}","","variable \"vpc_cidr_block\" {","  type        = string","  description = \"The CIDR block for the VPC.\"","  default     = \"10.0.0.0/16\"","}","","variable \"public_subnet1_cidr_block\" {","  type        = string",>59
|<"  description = \"The CIDR block for the public subnet.\"","  default     = \"10.0.1.0/24\"","}","","variable \"availability_zone\" {","  type        = string","  description = \"The availability zone to use for the subnet.\"","  default     = \"ap-southeast-1a\"  # Update this to a valid AZ for your chosen region","}","","variable \"instance_type\" {","  type        = string","  description = \"The instance type for the EC2 instance.\"","  default     = \"t2.micro\"","}","",>23
|<"variable \"ami_id\" {","  type        = string","  description = \"The AMI ID to use for the EC2 instance.\"","  default     = \"ami-0eb4694aa6f249c52\"","}",""
"5	LINE	0
	# Configure AWS Provider
	provider "aws" {
	  region = var.aws_region  # Replace with your desired region
	}
	
	# VPC and Subnet (Optional)
	# -- Use existing VPC and subnet resources if available
	resource "aws_vpc" "my_vpc" {
	  cidr_block = var.vpc_cidr_block
	}
	
	resource "aws_subnet" "public" {
	  vpc_id            = aws_vpc.my_vpc.id
	  cidr_block        = var.public_subnet1_cidr_block
	  availability_zone = var.availability_zone  # Update if needed
	}
	
	# Security Group
	resource "aws_security_group" "web_server" {
	  vpc_id      = aws_vpc.my_vpc.id  # Associate the security group with the same VPC
	  name        = "web-server-sg"
	  description = "Security group for web server instance"
	
	  ingress {
	    from_port   = 22
	    to_port     = 22
	    protocol    = "tcp"
	    cidr_blocks = ["0.0.0.0/0"]  # Restrict SSH access
	  }
	
	  ingress {
	    from_port   = 80
	    to_port     = 80
	    protocol    = "tcp"
	    cidr_blocks = ["0.0.0.0/0"]  # Restrict HTTP access
	  }
	
	  egress {
	    from_port   = 0
	    to_port     = 0
	    protocol    = "-1"
	    cidr_blocks = ["0.0.0.0/0"]  # Allow all outbound traffic
	  }
	}
	
	# EC2 Instance
	resource "aws_instance" "wordpress" {
	  ami             = var.ami_id
	  instance_type   = var.instance_type
	  subnet_id       = aws_subnet.public.id
|3,0,5,1,50,0,1710049359,"# Configure AWS Provider","provider \"aws\" {","  region = var.aws_region  # Replace with your desired region","}","","# VPC and Subnet (Optional)","# -- Use existing VPC and subnet resources if available","resource \"aws_vpc\" \"my_vpc\" {","  cidr_block = var.vpc_cidr_block","}","","resource \"aws_subnet\" \"public\" {","  vpc_id            = aws_vpc.my_vpc.id","  cidr_block        = var.public_subnet1_cidr_block",>65
|<"  availability_zone = var.availability_zone  # Update if needed","}","","# Security Group","resource \"aws_security_group\" \"web_server\" {","  vpc_id      = aws_vpc.my_vpc.id  # Associate the security group with the same VPC","  name        = \"web-server-sg\"","  description = \"Security group for web server instance\"","","  ingress {","    from_port   = 22","    to_port     = 22","    protocol    = \"tcp\"","    cidr_blocks = [\"0.0.0.0/0\"]  # Restrict SSH access","  }","",>13
|<"  ingress {","    from_port   = 80","    to_port     = 80","    protocol    = \"tcp\"","    cidr_blocks = [\"0.0.0.0/0\"]  # Restrict HTTP access","  }","","  egress {","    from_port   = 0","    to_port     = 0","    protocol    = \"-1\"","    cidr_blocks = [\"0.0.0.0/0\"]  # Allow all outbound traffic","  }","}","","# EC2 Instance","resource \"aws_instance\" \"wordpress\" {","  ami             = var.ami_id","  instance_type   = var.instance_type",>42
|<"  subnet_id       = aws_subnet.public.id"
"6	LINE	0
	variable "aws_region" {
	  type = string
	  description = "The AWS region to deploy the resources in."
	  default = "ap-southeast-1"  # Match the region in your main.tf configuration
	}
	
	variable "vpc_cidr_block" {
	  type = string
	  description = "The CIDR block for the VPC."
	  default = "10.0.0.0/16"
	}
	
	variable "public_subnet1_cidr_block" {
	  type = string
	  description = "The CIDR block for the public subnet."
	  default = "10.0.1.0/24"
	}
	
	variable "availability_zone" {
	  type = string
	  description = "The availability zone to use for the subnet."
	  default = "ap-southeast-1a"  # Update this to a valid AZ for your chosen region
	}
	
	variable "instance_type" {
	  type = string
	  description = "The instance type for the EC2 instance."
	  default = "t2.micro"
	}
	
	variable "ami_id" {
	  type = string
	  description = "The AMI ID to use for the EC2 instance."
	  default = "ami-0eb4694aa6f249c52"
	}
	
|3,0,6,1,36,0,1710048195,"variable \"aws_region\" {","  type = string","  description = \"The AWS region to deploy the resources in.\"","  default = \"ap-southeast-1\"  # Match the region in your main.tf configuration","}","","variable \"vpc_cidr_block\" {","  type = string","  description = \"The CIDR block for the VPC.\"","  default = \"10.0.0.0/16\"","}","","variable \"public_subnet1_cidr_block\" {","  type = string",>59
|<"  description = \"The CIDR block for the public subnet.\"","  default = \"10.0.1.0/24\"","}","","variable \"availability_zone\" {","  type = string","  description = \"The availability zone to use for the subnet.\"","  default = \"ap-southeast-1a\"  # Update this to a valid AZ for your chosen region","}","","variable \"instance_type\" {","  type = string","  description = \"The instance type for the EC2 instance.\"","  default = \"t2.micro\"","}","","variable \"ami_id\" {",>17
|<"  type = string","  description = \"The AMI ID to use for the EC2 instance.\"","  default = \"ami-0eb4694aa6f249c52\"","}",""
"7	LINE	0
	# Configure AWS Provider
	provider "aws" {
	  region = var.aws_region  # Replace with your desired region
	}
	
	# VPC and Subnet (Optional)
	# -- Use existing VPC and subnet resources if available
	resource "aws_vpc" "my_vpc" {
	  cidr_block = var.vpc_cidr_block
	}
	
	resource "aws_subnet" "public" {
	  vpc_id            = aws_vpc.my_vpc.id
	  cidr_block        = var.public_subnet1_cidr_block
	  availability_zone = var.availability_zone  # Update if needed
	}
	
	# Security Group
	resource "aws_security_group" "web_server" {
	  vpc_id      = aws_vpc.my_vpc.id  # Associate the security group with the same VPC
	  name        = "web-server-sg"
	  description = "Security group for web server instance"
	
	  ingress {
	    from_port   = 22
	    to_port     = 22
	    protocol    = "tcp"
	    cidr_blocks = ["0.0.0.0/0"]  # Restrict SSH access
	  }
	
	  ingress {
	    from_port   = 80
	    to_port     = 80
	    protocol    = "tcp"
	    cidr_blocks = ["0.0.0.0/0"]  # Restrict HTTP access
	  }
	
	  egress {
	    from_port   = 0
	    to_port     = 0
	    protocol    = "-1"
	    cidr_blocks = ["0.0.0.0/0"]  # Allow all outbound traffic
	  }
	}
	
	# EC2 Instance
	resource "aws_instance" "wordpress" {
	  ami             = var.ami_id
	  instance_type   = var.instance_type
	  subnet_id       = aws_subnet.public.id
|3,0,7,1,50,0,1710048181,"# Configure AWS Provider","provider \"aws\" {","  region = var.aws_region  # Replace with your desired region","}","","# VPC and Subnet (Optional)","# -- Use existing VPC and subnet resources if available","resource \"aws_vpc\" \"my_vpc\" {","  cidr_block = var.vpc_cidr_block","}","","resource \"aws_subnet\" \"public\" {","  vpc_id            = aws_vpc.my_vpc.id","  cidr_block        = var.public_subnet1_cidr_block",>65
|<"  availability_zone = var.availability_zone  # Update if needed","}","","# Security Group","resource \"aws_security_group\" \"web_server\" {","  vpc_id      = aws_vpc.my_vpc.id  # Associate the security group with the same VPC","  name        = \"web-server-sg\"","  description = \"Security group for web server instance\"","","  ingress {","    from_port   = 22","    to_port     = 22","    protocol    = \"tcp\"","    cidr_blocks = [\"0.0.0.0/0\"]  # Restrict SSH access","  }","",>13
|<"  ingress {","    from_port   = 80","    to_port     = 80","    protocol    = \"tcp\"","    cidr_blocks = [\"0.0.0.0/0\"]  # Restrict HTTP access","  }","","  egress {","    from_port   = 0","    to_port     = 0","    protocol    = \"-1\"","    cidr_blocks = [\"0.0.0.0/0\"]  # Allow all outbound traffic","  }","}","","# EC2 Instance","resource \"aws_instance\" \"wordpress\" {","  ami             = var.ami_id","  instance_type   = var.instance_type",>42
|<"  subnet_id       = aws_subnet.public.id"
"8	LINE	0
	# Configure AWS Provider
	provider "aws" {
	  region = var.aws_region  # Replace with your desired region
	}
	
	# VPC and Subnet (Optional)
	# -- Use existing VPC and subnet resources if available
	resource "aws_vpc" "my_vpc" {
	  cidr_block = var.vpc_cidr_block
	}
	resource "aws_subnet" "public" {
	  vpc_id         = aws_vpc.my_vpc.id
	  cidr_block     = var.public_subnet1_cidr_block
	  availability_zone = var.availability_zone  # Update if needed
	}
	
	# Security Group
	resource "aws_security_group" "web_server" {
	  name        = "web-server-sg"
	  description = "Security group for web server instance"
	
	  ingress {
	    from_port = 22
	    to_port   = 22
	    protocol  = "tcp"
	    cidr_blocks = ["0.0.0.0/0"]  # Restrict SSH access
	  }
	
	  ingress {
	    from_port = 80
	    to_port   = 80
	    protocol  = "tcp"
	    cidr_blocks = ["0.0.0.0/0"]#  Restrict HTTP access
	  }
	
	  egress {
	    from_port   = 0
	    to_port     = 0
	    protocol    = "-1"
	    cidr_blocks = ["0.0.0.0/0"]  # Allow all outbound traffic
	  }
	}
	
	# EC2 Instance
	resource "aws_instance" "wordpress" {
	  ami             = var.ami_id
	  instance_type   = var.instance_type
	  subnet_id       = aws_subnet.public.id
	  key_name        = "7"
	  vpc_security_group_ids = [aws_security_group.web_server.id]
|3,0,8,1,50,0,1710048165,"# Configure AWS Provider","provider \"aws\" {","  region = var.aws_region  # Replace with your desired region","}","","# VPC and Subnet (Optional)","# -- Use existing VPC and subnet resources if available","resource \"aws_vpc\" \"my_vpc\" {","  cidr_block = var.vpc_cidr_block","}","resource \"aws_subnet\" \"public\" {","  vpc_id         = aws_vpc.my_vpc.id","  cidr_block     = var.public_subnet1_cidr_block",>65
|<"  availability_zone = var.availability_zone  # Update if needed","}","","# Security Group","resource \"aws_security_group\" \"web_server\" {","  name        = \"web-server-sg\"","  description = \"Security group for web server instance\"","","  ingress {","    from_port = 22","    to_port   = 22","    protocol  = \"tcp\"","    cidr_blocks = [\"0.0.0.0/0\"]  # Restrict SSH access","  }","","  ingress {","    from_port = 80","    to_port   = 80","    protocol  = \"tcp\"",>58
|<"    cidr_blocks = [\"0.0.0.0/0\"]#  Restrict HTTP access","  }","","  egress {","    from_port   = 0","    to_port     = 0","    protocol    = \"-1\"","    cidr_blocks = [\"0.0.0.0/0\"]  # Allow all outbound traffic","  }","}","","# EC2 Instance","resource \"aws_instance\" \"wordpress\" {","  ami             = var.ami_id","  instance_type   = var.instance_type","  subnet_id       = aws_subnet.public.id","  key_name        = \"7\"",>63
|<"  vpc_security_group_ids = [aws_security_group.web_server.id]"
"9	LINE	0
	# Configure AWS Provider
	provider "aws" {
	  region = var.aws_region # Replace with your desired region
	}
	
	# VPC Setup (Optional, replace with your existing VPC ID if one exists)
	resource "aws_vpc" "my_vpc" {
	  cidr_block = var.vpc_cidr_block
	}
	
	# Subnet Setup (Optional, replace with your existing subnet ID if one exists)
	resource "aws_subnet" "public" {
	  vpc_id           = aws_vpc.my_vpc.id # Assuming you created a VPC
	  cidr_block       = var.public_subnet1_cidr_block
	  availability_zone = var.availability_zone # Replace with your desired AZ
	}
	
	# Security Group for EC2 Instance
	resource "aws_security_group" "web_server" {
	  name        = "web-server-sg" # Replace with a meaningful name for your security group
	  description = "Security group for web server instance"
	
	  ingress {
	    from_port   = 22
	    to_port     = 22
	    protocol    = "tcp"
	    cidr_blocks = ["0.0.0.0/0"] # Allow SSH access from anywhere (for now)
	  }
	
	  ingress {
	    from_port   = 80
	    to_port     = 80
	    protocol    = "tcp"
	    cidr_blocks = ["0.0.0.0/0"] # Allow HTTP access from anywhere (for now)
	  }
	
	  egress {
	    from_port   = 0
	    to_port     = 0
	    protocol    = "-1"
	    cidr_blocks = ["0.0.0.0/0"] # Allow all outbound traffic
	  }
	}
	
	# EC2 Instance Creation
	resource "aws_instance" "wordpress" {
	  ami                    = var.ami_id
	  instance_type          = var.instance_type # Replace with your desired instance type
	  subnet_id              = aws_subnet.public.id
	  key_name               = "7" 
|3,0,9,1,50,0,1710047459,"# Configure AWS Provider","provider \"aws\" {","  region = var.aws_region # Replace with your desired region","}","","# VPC Setup (Optional, replace with your existing VPC ID if one exists)","resource \"aws_vpc\" \"my_vpc\" {","  cidr_block = var.vpc_cidr_block","}","","# Subnet Setup (Optional, replace with your existing subnet ID if one exists)","resource \"aws_subnet\" \"public\" {",>69
|<"  vpc_id           = aws_vpc.my_vpc.id # Assuming you created a VPC","  cidr_block       = var.public_subnet1_cidr_block","  availability_zone = var.availability_zone # Replace with your desired AZ","}","","# Security Group for EC2 Instance","resource \"aws_security_group\" \"web_server\" {","  name        = \"web-server-sg\" # Replace with a meaningful name for your security group","  description = \"Security group for web server instance\"","","  ingress {","    from_port   = 22",>22
|<"    to_port     = 22","    protocol    = \"tcp\"","    cidr_blocks = [\"0.0.0.0/0\"] # Allow SSH access from anywhere (for now)","  }","","  ingress {","    from_port   = 80","    to_port     = 80","    protocol    = \"tcp\"","    cidr_blocks = [\"0.0.0.0/0\"] # Allow HTTP access from anywhere (for now)","  }","","  egress {","    from_port   = 0","    to_port     = 0","    protocol    = \"-1\"","    cidr_blocks = [\"0.0.0.0/0\"] # Allow all outbound traffic","  }","}","",>25
|<"# EC2 Instance Creation","resource \"aws_instance\" \"wordpress\" {","  ami                    = var.ami_id","  instance_type          = var.instance_type # Replace with your desired instance type","  subnet_id              = aws_subnet.public.id","  key_name               = \"7\" "

# File marks:
'0  26  22  ~/module/rds/variables.tf
|4,48,26,22,1710053038,"~/module/rds/variables.tf"
'1  1  0  ~/module/rds/main.tf
|4,49,1,0,1710053023,"~/module/rds/main.tf"
'2  26  23  ~/module/rds/variables.tf
|4,50,26,23,1710052376,"~/module/rds/variables.tf"
'3  4  28  ~/module/rds/variables.tf
|4,51,4,28,1710052345,"~/module/rds/variables.tf"
'4  4  28  ~/module/rds/variables.tf
|4,52,4,28,1710052345,"~/module/rds/variables.tf"
'5  4  28  ~/module/rds/variables.tf
|4,53,4,28,1710052345,"~/module/rds/variables.tf"
'6  4  28  ~/module/rds/variables.tf
|4,54,4,28,1710052345,"~/module/rds/variables.tf"
'7  18  34  ~/module/alb/main.tf
|4,55,18,34,1710050642,"~/module/alb/main.tf"
'8  49  28  ~/module/alb/main.tf
|4,56,49,28,1710050495,"~/module/alb/main.tf"
'9  49  28  ~/module/alb/main.tf
|4,57,49,28,1710050495,"~/module/alb/main.tf"

# Jumplist (newest first):
-'  26  22  ~/module/rds/variables.tf
|4,39,26,22,1710053038,"~/module/rds/variables.tf"
-'  1  0  ~/module/rds/main.tf
|4,39,1,0,1710053023,"~/module/rds/main.tf"
-'  1  0  ~/module/rds/main.tf
|4,39,1,0,1710053023,"~/module/rds/main.tf"
-'  26  23  ~/module/rds/variables.tf
|4,39,26,23,1710052376,"~/module/rds/variables.tf"
-'  26  23  ~/module/rds/variables.tf
|4,39,26,23,1710052376,"~/module/rds/variables.tf"
-'  4  28  ~/module/rds/variables.tf
|4,39,4,28,1710052350,"~/module/rds/variables.tf"
-'  4  28  ~/module/rds/variables.tf
|4,39,4,28,1710052350,"~/module/rds/variables.tf"
-'  4  28  ~/module/rds/variables.tf
|4,39,4,28,1710052350,"~/module/rds/variables.tf"
-'  4  28  ~/module/rds/variables.tf
|4,39,4,28,1710052345,"~/module/rds/variables.tf"
-'  4  28  ~/module/rds/variables.tf
|4,39,4,28,1710052345,"~/module/rds/variables.tf"
-'  18  34  ~/module/alb/main.tf
|4,39,18,34,1710050642,"~/module/alb/main.tf"
-'  18  34  ~/module/alb/main.tf
|4,39,18,34,1710050642,"~/module/alb/main.tf"
-'  18  34  ~/module/alb/main.tf
|4,39,18,34,1710050642,"~/module/alb/main.tf"
-'  18  34  ~/module/alb/main.tf
|4,39,18,34,1710050642,"~/module/alb/main.tf"
-'  18  34  ~/module/alb/main.tf
|4,39,18,34,1710050642,"~/module/alb/main.tf"
-'  18  34  ~/module/alb/main.tf
|4,39,18,34,1710050642,"~/module/alb/main.tf"
-'  18  34  ~/module/alb/main.tf
|4,39,18,34,1710050642,"~/module/alb/main.tf"
-'  18  34  ~/module/alb/main.tf
|4,39,18,34,1710050642,"~/module/alb/main.tf"
-'  18  34  ~/module/alb/main.tf
|4,39,18,34,1710050642,"~/module/alb/main.tf"
-'  18  34  ~/module/alb/main.tf
|4,39,18,34,1710050642,"~/module/alb/main.tf"
-'  18  34  ~/module/alb/main.tf
|4,39,18,34,1710050642,"~/module/alb/main.tf"
-'  18  34  ~/module/alb/main.tf
|4,39,18,34,1710050642,"~/module/alb/main.tf"
-'  18  34  ~/module/alb/main.tf
|4,39,18,34,1710050642,"~/module/alb/main.tf"
-'  18  34  ~/module/alb/main.tf
|4,39,18,34,1710050642,"~/module/alb/main.tf"
-'  18  34  ~/module/alb/main.tf
|4,39,18,34,1710050642,"~/module/alb/main.tf"
-'  18  34  ~/module/alb/main.tf
|4,39,18,34,1710050642,"~/module/alb/main.tf"
-'  49  28  ~/module/alb/main.tf
|4,39,49,28,1710050613,"~/module/alb/main.tf"
-'  49  28  ~/module/alb/main.tf
|4,39,49,28,1710050613,"~/module/alb/main.tf"
-'  49  28  ~/module/alb/main.tf
|4,39,49,28,1710050613,"~/module/alb/main.tf"
-'  49  28  ~/module/alb/main.tf
|4,39,49,28,1710050613,"~/module/alb/main.tf"
-'  49  28  ~/module/alb/main.tf
|4,39,49,28,1710050613,"~/module/alb/main.tf"
-'  49  28  ~/module/alb/main.tf
|4,39,49,28,1710050613,"~/module/alb/main.tf"
-'  49  28  ~/module/alb/main.tf
|4,39,49,28,1710050613,"~/module/alb/main.tf"
-'  49  28  ~/module/alb/main.tf
|4,39,49,28,1710050613,"~/module/alb/main.tf"
-'  49  28  ~/module/alb/main.tf
|4,39,49,28,1710050613,"~/module/alb/main.tf"
-'  49  28  ~/module/alb/main.tf
|4,39,49,28,1710050613,"~/module/alb/main.tf"
-'  49  28  ~/module/alb/main.tf
|4,39,49,28,1710050613,"~/module/alb/main.tf"
-'  49  28  ~/module/alb/main.tf
|4,39,49,28,1710050613,"~/module/alb/main.tf"
-'  49  28  ~/module/alb/main.tf
|4,39,49,28,1710050613,"~/module/alb/main.tf"
-'  49  28  ~/module/alb/main.tf
|4,39,49,28,1710050613,"~/module/alb/main.tf"
-'  49  28  ~/module/alb/main.tf
|4,39,49,28,1710050613,"~/module/alb/main.tf"
-'  49  28  ~/module/alb/main.tf
|4,39,49,28,1710050613,"~/module/alb/main.tf"
-'  49  28  ~/module/alb/main.tf
|4,39,49,28,1710050495,"~/module/alb/main.tf"
-'  49  28  ~/module/alb/main.tf
|4,39,49,28,1710050495,"~/module/alb/main.tf"
-'  49  28  ~/module/alb/main.tf
|4,39,49,28,1710050495,"~/module/alb/main.tf"
-'  49  28  ~/module/alb/main.tf
|4,39,49,28,1710050495,"~/module/alb/main.tf"
-'  49  28  ~/module/alb/main.tf
|4,39,49,28,1710050495,"~/module/alb/main.tf"
-'  49  28  ~/module/alb/main.tf
|4,39,49,28,1710050495,"~/module/alb/main.tf"
-'  49  28  ~/module/alb/main.tf
|4,39,49,28,1710050495,"~/module/alb/main.tf"
-'  49  28  ~/module/alb/main.tf
|4,39,49,28,1710050495,"~/module/alb/main.tf"
-'  49  28  ~/module/alb/main.tf
|4,39,49,28,1710050495,"~/module/alb/main.tf"
-'  49  28  ~/module/alb/main.tf
|4,39,49,28,1710050495,"~/module/alb/main.tf"
-'  49  28  ~/module/alb/main.tf
|4,39,49,28,1710050495,"~/module/alb/main.tf"
-'  49  28  ~/module/alb/main.tf
|4,39,49,28,1710050495,"~/module/alb/main.tf"
-'  49  28  ~/module/alb/main.tf
|4,39,49,28,1710050495,"~/module/alb/main.tf"
-'  49  28  ~/module/alb/main.tf
|4,39,49,28,1710050495,"~/module/alb/main.tf"
-'  49  28  ~/module/alb/main.tf
|4,39,49,28,1710050495,"~/module/alb/main.tf"
-'  49  28  ~/module/alb/main.tf
|4,39,49,28,1710050495,"~/module/alb/main.tf"
-'  71  0  ~/module/alb/main.tf
|4,39,71,0,1710050463,"~/module/alb/main.tf"
-'  71  0  ~/module/alb/main.tf
|4,39,71,0,1710050463,"~/module/alb/main.tf"
-'  71  0  ~/module/alb/main.tf
|4,39,71,0,1710050463,"~/module/alb/main.tf"
-'  71  0  ~/module/alb/main.tf
|4,39,71,0,1710050463,"~/module/alb/main.tf"
-'  71  0  ~/module/alb/main.tf
|4,39,71,0,1710050463,"~/module/alb/main.tf"
-'  71  0  ~/module/alb/main.tf
|4,39,71,0,1710050463,"~/module/alb/main.tf"
-'  71  0  ~/module/alb/main.tf
|4,39,71,0,1710050463,"~/module/alb/main.tf"
-'  71  0  ~/module/alb/main.tf
|4,39,71,0,1710050463,"~/module/alb/main.tf"
-'  71  0  ~/module/alb/main.tf
|4,39,71,0,1710050463,"~/module/alb/main.tf"
-'  71  0  ~/module/alb/main.tf
|4,39,71,0,1710050463,"~/module/alb/main.tf"
-'  71  0  ~/module/alb/main.tf
|4,39,71,0,1710050463,"~/module/alb/main.tf"
-'  71  0  ~/module/alb/main.tf
|4,39,71,0,1710050463,"~/module/alb/main.tf"
-'  71  0  ~/module/alb/main.tf
|4,39,71,0,1710050463,"~/module/alb/main.tf"
-'  71  0  ~/module/alb/main.tf
|4,39,71,0,1710050463,"~/module/alb/main.tf"
-'  71  0  ~/module/alb/main.tf
|4,39,71,0,1710050463,"~/module/alb/main.tf"
-'  71  0  ~/module/alb/main.tf
|4,39,71,0,1710050463,"~/module/alb/main.tf"
-'  71  0  ~/module/alb/main.tf
|4,39,71,0,1710050463,"~/module/alb/main.tf"
-'  71  0  ~/module/alb/main.tf
|4,39,71,0,1710050463,"~/module/alb/main.tf"
-'  71  0  ~/module/alb/main.tf
|4,39,71,0,1710050463,"~/module/alb/main.tf"
-'  71  0  ~/module/alb/main.tf
|4,39,71,0,1710050463,"~/module/alb/main.tf"
-'  71  0  ~/module/alb/main.tf
|4,39,71,0,1710050463,"~/module/alb/main.tf"
-'  71  0  ~/module/alb/main.tf
|4,39,71,0,1710050463,"~/module/alb/main.tf"
-'  71  0  ~/module/alb/main.tf
|4,39,71,0,1710050463,"~/module/alb/main.tf"
-'  71  0  ~/module/alb/main.tf
|4,39,71,0,1710050463,"~/module/alb/main.tf"
-'  71  0  ~/module/alb/main.tf
|4,39,71,0,1710050463,"~/module/alb/main.tf"
-'  71  0  ~/module/alb/main.tf
|4,39,71,0,1710050463,"~/module/alb/main.tf"
-'  71  0  ~/module/alb/main.tf
|4,39,71,0,1710050463,"~/module/alb/main.tf"
-'  71  0  ~/module/alb/main.tf
|4,39,71,0,1710050463,"~/module/alb/main.tf"
-'  71  0  ~/module/alb/main.tf
|4,39,71,0,1710050463,"~/module/alb/main.tf"
-'  71  0  ~/module/alb/main.tf
|4,39,71,0,1710050463,"~/module/alb/main.tf"
-'  71  0  ~/module/alb/main.tf
|4,39,71,0,1710050463,"~/module/alb/main.tf"
-'  71  0  ~/module/alb/main.tf
|4,39,71,0,1710050463,"~/module/alb/main.tf"
-'  3  24  ~/module/alb/variables.tf
|4,39,3,24,1710050415,"~/module/alb/variables.tf"
-'  3  24  ~/module/alb/variables.tf
|4,39,3,24,1710050415,"~/module/alb/variables.tf"
-'  3  24  ~/module/alb/variables.tf
|4,39,3,24,1710050415,"~/module/alb/variables.tf"
-'  3  24  ~/module/alb/variables.tf
|4,39,3,24,1710050415,"~/module/alb/variables.tf"
-'  3  24  ~/module/alb/variables.tf
|4,39,3,24,1710050415,"~/module/alb/variables.tf"
-'  3  24  ~/module/alb/variables.tf
|4,39,3,24,1710050415,"~/module/alb/variables.tf"
-'  3  24  ~/module/alb/variables.tf
|4,39,3,24,1710050415,"~/module/alb/variables.tf"
-'  3  24  ~/module/alb/variables.tf
|4,39,3,24,1710050415,"~/module/alb/variables.tf"
-'  3  24  ~/module/alb/variables.tf
|4,39,3,24,1710050415,"~/module/alb/variables.tf"
-'  3  24  ~/module/alb/variables.tf
|4,39,3,24,1710050415,"~/module/alb/variables.tf"

# History of marks within files (newest to oldest):

> ~/module/rds/variables.tf
	*	1710053035	0
	"	26	22
	^	26	23
	.	26	23
	+	4	28
	+	26	23

> ~/module/rds/main.tf
	*	1710053020	0
	"	1	0

> ~/module/alb/main.tf
	*	1710050639	0
	"	18	34
	^	18	35
	.	18	34
	+	1	0
	+	5	24
	+	1	0
	+	10	38
	+	16	34
	+	23	23
	+	28	23
	+	49	28
	+	12	34
	+	18	34

> ~/module/alb/variables.tf
	*	1710050412	0
	"	3	24
	^	3	25
	.	3	24
	+	3	24

> ~/module/ec2/main.tf
	*	1710049972	0
	"	103	0
	^	103	0
	.	102	1
	+	1	39
	+	1	44
	+	1	46
	+	1	24
	+	1	1
	+	1	19
	+	1	32
	+	1	108
	+	1	24
	+	102	1

> ~/module/ec2/variables.tf
	*	1710049511	0
	"	36	0
	^	36	0
	.	35	1
	+	1	24
	+	1	0
	+	1	23
	+	1	18
	+	1	23
	+	35	1

> ~/module/s3bucket/variables.tf
	*	1710043865	0
	"	10	29
	^	10	30
	.	10	29
	+	4	28
	+	10	29

> ~/module/s3bucket/main.tf
	*	1710043837	0
	"	3	0
	^	3	0

> ~/module/VPC/variables.tf
	*	1710043594	0
	"	19	26
	^	19	27
	.	19	26
	+	17	16
	+	12	16
	+	18	17
	+	20	1
	+	21	0
	+	4	26
	+	12	16
	+	17	16
	+	19	25
	+	17	37
	+	19	26

> ~/module/security/main.tf
	*	1710043407	0
	"	5	39
	^	5	40
	.	5	40
	+	5	40

> ~/module/security/variables.tf
	*	1710043392	0
	"	8	22
	^	8	23
	.	8	22
	+	8	22

> ~/module/VPC/main.tf
	*	1710043327	0
	"	69	0
	^	69	0
	.	26	30
	+	17	37
	+	27	34
	+	26	24
	+	16	30
	+	26	30
